name: Java CI with Gradle

on:
  push:
    branches: [ "master" ]
  pull_request:
    branches: [ "master" ]

jobs:
  build-and-package:
    name: Build & Package on ${{ matrix.os }}
    runs-on: ${{ matrix.os }}
    strategy:
      matrix:
        os: [ubuntu-latest, windows-latest, macos-latest]
    permissions:
      contents: write

    steps:
      - name: Checkout project
        uses: actions/checkout@v4

      - name: Set up JDK 24 (Zulu, with jmods)
        uses: actions/setup-java@v4
        with:
          java-version: '24'
          distribution: 'zulu' # Zulu 带 jmods，支持 jpackage/jlink

      - name: Set up Gradle
        uses: gradle/actions/setup-gradle@v4.0.0
        with:
          gradle-version: '8.14.2'

      - name: Grant execute permission for gradlew (Linux/macOS)
        if: runner.os != 'Windows'
        run: chmod +x ./gradlew

      - name: Build project
        run: ./gradlew build

      - name: Package app with jpackage
        run: ./gradlew jpackage

      - name: Upload packaged artifact
        uses: actions/upload-artifact@v4
        with:
          name: packaged-app-${{ matrix.os }}
          path: build/jpackage/**

  dependency-submission:
    runs-on: ubuntu-latest
    permissions:
      contents: write

    steps:
      - uses: actions/checkout@v4

      - name: Set up JDK 24 (Zulu)
        uses: actions/setup-java@v4
        with:
          java-version: '24'
          distribution: 'zulu'

      - name: Set up Gradle
        uses: gradle/actions/setup-gradle@v4.0.0
        with:
          gradle-version: '8.14.2'

      - name: Submit dependency graph
        uses: gradle/actions/dependency-submission@v4.0.0

  release:
    name: Release artifacts
    needs: build-and-package
    runs-on: ubuntu-latest
    permissions:
      contents: write

    steps:
      - uses: actions/checkout@v4

      - name: Download packaged artifacts
        uses: actions/download-artifact@v4
        with:
          path: dist

      - name: Create GitHub Release
        uses: softprops/action-gh-release@v2
        with:
          tag_name: ${{ github.ref_name }}
          name: Release ${{ github.ref_name }}
          body: |
            自动化打包并发布，包含 Linux、Windows、macOS 版本。
          files: dist/**/*  # 上传所有平台打包结果
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
